# clusters/my-cluster/infra/loki-release.yaml
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: loki
      # Artifact Hub 또는 GitHub에서 확인한 안정적인 최신 버전
      version: "6.30.1"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  # Helm 차트의 공식 values.yaml 구조에 맞춘 최종 설정
  values:
    # 1. 실행 모드를 'SingleBinary'로 최상단에 명시합니다.
    deploymentMode: SingleBinary
    
    # 2. 'loki:' 키 아래에, Loki 애플리케이션의 내부 동작에 관한 설정만 정의합니다.
    loki:
      auth_enabled: false
      
      limits_config:
        volume_enabled: true

      common:
          path_prefix: /var/loki
          storage:
            filesystem:
              chunks_directory: /var/loki/chunks
              rules_directory: /var/loki/rules
          replication_factor: 1
          ring:
            instance_addr: ${HOSTNAME}
            kvstore:
              store: inmemory
      
      storage:
        type: 'filesystem'
        # 👇 템플릿 오류를 회피하기 위한 더미(dummy) 값 추가
        bucketNames:
          chunks: "fake-bucket"
          ruler: "fake-bucket"
          admin: "fake-bucket"
      
      # 스키마 설정을 최신 TSDB 방식으로 덮어씁니다.
      schemaConfig:
        configs:
          - from: "2024-01-01"
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h
            
    # 3. 'singleBinary:' 모드에 대한 세부 설정을 정의합니다.
    singleBinary:
      replicas: 1
      # 영속성을 위한 디스크 설정
      persistence:
        enabled: true
        size: 10Gi
      # Pod에 대한 자원 제한 설정
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: "1" # 1 core
          memory: 1Gi
    
    # 4. (핵심 수정) 테스트 기능을 비활성화하여 "file is larger than the maximum" 오류를 해결합니다.
    test:
      enabled: false

    # 5. 분산 모드 컴포넌트들은 사용하지 않으므로 명시적으로 비활성화합니다.
    write:
      replicas: 0
    read:
      replicas: 0
    backend:
      replicas: 0
